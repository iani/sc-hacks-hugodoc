+++
title = "Modify Patterns while playing"
weight = 11
+++

An EventStream makes it easy to modify patterns while playing them. 

#+HTML: <!-- more -->

* How it works
An =EventPattern= creates =EventStreams= which are played by =EventStreamPlayer=.  =EventStream= stores an event whose values are streams and uses this to produce a new event which is played by EventStreamPlayer.  It is thus possible to modify the event stored in the EventStream while the EventStreamPlayer is playing it.  This makes it easy to modify a playing pattern (which is difficult when using Pbind).

* Example

#+BEGIN_EXAMPLE
() +> \e;
0.1 +>.dur \e;
Pseq ((0..20), inf) +>.degree \e;
Prand ((0..20), inf) +>.degree \e;
(freq: Pfunc ({ 300 rrand: 1000 }), dur: Prand ([0.1, 0.2], inf)) +> \e;
(freq: Pfunc ({ 30.rrand(80).midicps }), dur: Pfunc ({ 0.1 exprand: 1 }), legato: Prand ([0.1, 2], inf)) +> \e;
(degree: Pseq ((0..20), inf), dur: 0.1) +!>.degree \e;
#+END_EXAMPLE

*Note:*

- =+>= adds all key-value pairs of an event to the event being played.
- =+!>= replaces the contents of the event being played by the contents of the new event.
